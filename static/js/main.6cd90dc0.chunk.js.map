{"version":3,"sources":["components/ContactList/Contact/Contact.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","hendelInputChange","event","setState","currentTarget","value","hendelSubmit","preventDefault","newContact","id","uuidv4","props","onSubmit","className","styles","this","type","pattern","title","required","onChange","Component","Filter","Contact","onDelete","button","onClick","ContactList","contacts","onDeleteContact","map","App","filter","addContact","contact","some","contactItem","toLowerCase","alert","prevState","deleteContact","contactId","hendelFindeInputChange","contactsFiltred","includes","toLocaleLowerCase","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cd90dc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__258WK\",\"button\":\"Contact_button__1-hB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3pcIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2pXQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3_ay5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Xw2Nl\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  hendelInputChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n  hendelSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.onSubmit(newContact);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.ContactForm} onSubmit={this.hendelSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.Filter}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      onChange={onChange}\n      value={value}\n    />\n  </label>\n);\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={styles.Contact}>\n      <p>\n        {name} {number}\n      </p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default Contact;\n","import React from 'react';\nimport Contact from './Contact/Contact';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <Contact\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDelete={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport 'modern-normalize/modern-normalize.css';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      { id: 'id-5', name: 'Sarah Connor', number: '725-61-18' },\n    ],\n    filter: '',\n  };\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    const { name } = contact;\n    const isAvailable = contacts.some(\n      contactItem => contactItem.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (isAvailable) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  hendelFindeInputChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const contactsFiltred = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n    return (\n      <div className={styles.container}>\n        <h2>Phonebook</h2>\n        <ContactForm contacts={contacts} onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.hendelFindeInputChange} />\n        <ContactList\n          contacts={contactsFiltred}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}